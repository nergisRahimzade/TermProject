import javafx.application.*;
import javafx.stage.*;
import javafx.scene.*;
import javafx.scene.shape.*;
import javafx.scene.layout.*;
import javafx.scene.paint.*;
import javafx.scene.control.*;
import javafx.event.*;
import javafx.geometry.*;
import javafx.animation.*;
import java.util.*;

public abstract class Tower extends Group{
	public abstract boolean buyable(); // checks whether user has enough money to buy the tower
	//public abstract void shootEnemy(Enemy enemy);// shoots the closest enemy and allows the tower to only one enemy at a time
	
	public Tower()
	{
		
	}
	
	//shows the range of circle when user is dragging it
	public void showRange()
	{
		//shows the range of the tower while user is dragging it
		
		Circle circle = new Circle(100);
		circle.setFill(Color.color(1, 0.6, 0.6, 0.8));
		
		Pane pane = new Pane();
		pane.getChildren().add(circle);
		
	}
	
	//places the tower after the user dragges the tower
	public void placeTower()
	{
		
	}
	
	//checks whether the enemy is in range of tower
	public boolean isInRange(double towerX, double towerY, Enemy enemy, double radius)
	{
		double distance = Math.sqrt(Math.pow(enemy.getX() - towerX, 2) + Math.pow(enemy.getY() - towerY, 2));
		
		if(distance <= radius)
			return true;

		else
			return false;
	}
	
	public boolean towerExists()
	{
		//checks whether a tower already exists on the point user wants to insert tower
		return false;
	}
	
	

}
